_require "../../../basis.smi"
_require "../../../ml-yacc-lib.smi"
_require "FormatTemplate.smi"
_require "TokenTable.smi"
_require "ml.grm.smi"

structure MLLex
 =
struct
  structure UserDeclarations =
  struct
    type token = MLLrVals.Tokens.token
    type pos = MLLrVals.Tokens.pos
    type arg = 
         {
          brack_stack : pos ref list ref,
          comLevel : int ref,
          currentLineNumber : int ref,
          error : (string * pos * pos) -> unit,
          inFormatComment : bool ref,
          lineMap : (int * (pos * pos)) list ref,
          lastNewLinePos : int ref,
          stream : TextIO.instream, 
          stringBuf : string list ref,
          stringStart : pos ref,
          stringType : bool ref
         }
  end
  val makeLexer
      : (int -> string) -> UserDeclarations.arg -> unit -> UserDeclarations.token
end
