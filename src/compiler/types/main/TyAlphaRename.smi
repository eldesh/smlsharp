_require "basis.smi"
_require "../../../compiler-utils/env/main/LabelEnv.smi"
_require "../../../compiler-utils/env/main/SEnv.smi"
_require "../../absyn/main/Symbol.ppg.smi"
_require "../../control/main/Bug.ppg.smi"
_require "../../control/main/Loc.ppg.smi"
_require "../../name/main/LocalID.smi"
_require "../../builtin2/main/BuiltinPrimitive.ppg.smi"
_require "../../builtin2/main/BuiltinTypeNames.ppg.smi"
_require "./Types.ppg.smi"
_require "./TypesBasics.smi"
_require "./VarMap.smi"
_require "./OPrimInstMap.smi"
_require "./TyPrinters.smi"

structure TyAlphaRename =
struct
  type btvMap = BoundTypeVarID.id BoundTypeVarID.Map.map
  val copyTy : btvMap -> Types.ty -> Types.ty
  val newBtvEnv : btvMap -> Types.btvEnv -> btvMap * Types.btvEnv
  val emptyBtvMap : BoundTypeVarID.id BoundTypeVarID.Map.map
end
