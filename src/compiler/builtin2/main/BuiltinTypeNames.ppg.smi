_require "basis.smi"
_require "smlformat-lib.smi"
_require "../../runtimetypes/main/RuntimeTypes.ppg.smi"

structure BuiltinTypeNames =
struct

  datatype bty 
    = INTty
    | INTINFty
    | WORDty
    | WORD8ty
    | CHARty
    | STRINGty
    | REALty
    | REAL32ty
    | UNITty
    | PTRty
    | CODEPTRty
    | ARRAYty
    | VECTORty
    | EXNty
    | BOXEDty
    | EXNTAGty
    | CONTAGty
    | REFty

  val findType : string -> bty option
  val format_bty : bty -> SMLFormat.FormatExpression.expression list
  val runtimeTy : bty -> RuntimeTypes.ty
  val compatTy : {absTy : bty, implTy : bty} -> bool

end
