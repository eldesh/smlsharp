structure BuiltinTypeNames =
struct

  (*% *)
  datatype bty 
    = (*% @format "int" *)
      INTty
    | (*% @format "intInf" *)
      INTINFty
    | (*% @format "word" *)
      WORDty
    | (*% @format "word8" *)
      WORD8ty
    | (*% @format "char" *)
      CHARty
    | (*% @format "string" *)
      STRINGty
    | (*% @format "real" *)
      REALty
    | (*% @format "real32" *)
      REAL32ty
    | (*% @format "unit" *)
      UNITty
    | (*% @format "ptr" *)
      PTRty      (* 'a ptr *)
    | (*% @format "codeptr" *)
      CODEPTRty  (* codeptr *)
    | (*% @format "array" *)
      ARRAYty    (* 'a array *)
    | (*% @format "vector" *)
      VECTORty   (* 'a vector *)
    | (*% @format "exn" *)
      EXNty
    | (*% @format "boxed" *)
      BOXEDty    (* pointer to some ML object *)
    | (*% @format "exntag" *)
      EXNTAGty   (* the type of x in exception E = x *)
    | (*% @format "contag" *)
      CONTAGty   (* the type of data constructor tag *)
    | (*% @format "ref" *)
      REFty      (* 'a ref *)

  fun findType name =
      case name of
        "int" => SOME INTty
      | "intInf" => SOME INTINFty
      | "word" => SOME WORDty
      | "word8" => SOME WORD8ty
      | "char" => SOME CHARty
      | "string" => SOME STRINGty
      | "real" => SOME REALty
      | "real32" => SOME REAL32ty
      | "unit" => SOME UNITty
      | "ptr" => SOME PTRty
      | "codeptr" => SOME CODEPTRty
      | "array" => SOME ARRAYty
      | "vector" => SOME VECTORty
      | "exn" => SOME EXNty
      | "boxed" => SOME BOXEDty
(* ohori 2013-06-16 contag added *)
      | "contag" => SOME CONTAGty
      | "ref" => SOME REFty
      | _ => NONE

  fun runtimeTy ty =
      case ty of
        INTty => RuntimeTypes.INTty
      | INTINFty => RuntimeTypes.BOXEDty
      | WORDty => RuntimeTypes.UINTty
      | WORD8ty => RuntimeTypes.UCHARty
      | CHARty => RuntimeTypes.UCHARty
      | STRINGty => RuntimeTypes.BOXEDty
      | REALty => RuntimeTypes.DOUBLEty
      | REAL32ty => RuntimeTypes.FLOATty
      | UNITty => RuntimeTypes.UINTty
      | PTRty => RuntimeTypes.POINTERty
      | CODEPTRty => RuntimeTypes.SOME_CODEPTRty
      | ARRAYty => RuntimeTypes.BOXEDty
      | VECTORty => RuntimeTypes.BOXEDty
      | EXNty => RuntimeTypes.BOXEDty
      | BOXEDty => RuntimeTypes.BOXEDty
      | EXNTAGty => RuntimeTypes.BOXEDty
      | CONTAGty => RuntimeTypes.UINTty
      | REFty => RuntimeTypes.BOXEDty

 (* Ohori: This is used to check the compatibility of runtimeTy of TFV_DTY
    against that of TFUN_DTY at signature checking *)
  fun compatTy {absTy, implTy} =
      absTy = implTy orelse
      case absTy of
        BOXEDty => runtimeTy implTy = RuntimeTypes.BOXEDty
      | _ => false

end
