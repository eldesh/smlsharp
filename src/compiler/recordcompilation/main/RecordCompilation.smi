_require "basis.smi"
_require "smlnj-lib/Util/ord-key-sig.sml"
_require "smlnj-lib/Util/binary-map-fn.smi"
_require "smlnj-lib/Util/binary-set-fn.smi"
_require "../../../compiler-utils/env/main/SEnv.smi"
_require "../../../compiler-utils/env/main/LabelEnv.smi"
_require "../../control/main/Bug.ppg.smi"
_require "../../control/main/Loc.ppg.smi"
_require "../../absyn/main/Symbol.ppg.smi"
_require "../../name/main/LocalID.smi"
_require "../../recordcalc/main/RecordCalc.ppg.smi"
_require "../../recordcalc/main/RecordCalcFormatter.smi"
_require "../../typedcalc/main/TypedCalc.ppg.smi"
_require "../../types/main/Types.ppg.smi"
_require "../../types/main/TypesBasics.smi"
_require "../../types/main/TyAlphaRename.smi"
_require "./OverloadKind.smi"
_require "./RecordKind.smi"
_require "./UnivKind.smi"

structure RecordCompilation =
struct
  val compile : RecordCalc.rcdecl list -> RecordCalc.rcdecl list
end
