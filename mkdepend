#!/bin/sh

[ "x$SMLSHARP" = "x" ] && SMLSHARP=smlsharp
[ "x$OBJEXT" = "x" ] && OBJEXT=o

files_mk=files.mk
depend_mk=depend.mk

dep_objfiles () {
  echo $SMLSHARP -Bsrc -nostdpath -Isrc -Ml "$1" 1>&2
  tmp=`$SMLSHARP -Bsrc -nostdpath -Isrc -Ml "$1"`
  st=$?; test "$st" = "0" || exit $?
  echo "$tmp" \
    | awk '{sub(" *\\\\$","");sub("^ *","");gsub("  *","\n");print}' \
    | sed '1d'
}

dep_srcfiles () { \
  if test -f `echo "$1" | sed 's,\.smi$,.sml,'`; then
    sedscript="1d"
  else
    sedscript="1,2d"
  fi
  echo $SMLSHARP -Bsrc -nostdpath -Isrc -M "$1" 1>&2
  tmp=`$SMLSHARP -Bsrc -nostdpath -Isrc -M "$1"`
  st=$?; test "$st" = "0" || exit $?
  echo "$tmp" \
    | awk '{sub(" *\\\\$","");sub("^ *","");gsub("  *","\n");print}' \
    | sed "$sedscript"
}

ALL_OBJECTS=
INSTALL_FILES_SRC=
INSTALL_FILES_OBJ=
GEN_SOURCES=
CLEAN_FILES=

read_smi () { \
  obj=`dep_objfiles "$2"`
  st=$?; test "$st" = "0" || exit $?
  ALL_OBJECTS="$ALL_OBJECTS $obj"
  obj=`echo "$obj" | awk '{a[NR]=$0}END{for(i=NR;i>0;i--)print a[i]}'`
  echo "$1""_OBJECTS = $obj" | sed '$q;s,$, \\,' >> $files_mk
  src=`dep_srcfiles "$2"`
  st=$?; test "$st" = "0" || exit $?
  case "$1" in
    *_LIB)
      INSTALL_FILES_SRC="$INSTALL_FILES_SRC $src $2"
      INSTALL_FILES_OBJ="$INSTALL_FILES_OBJ $obj"
      ;;
  esac
  { echo "$1"'_SOURCES ='; \
    echo "$src" | sed 's/\.smi$/.sml/' \
    | while read i; do test -f "$i" && echo "$i"; done; } \
  | sed '$q;s,$, \\,' >> $files_mk
}

echo '# auto-generated by mkdepend. DO NOT EDIT BY HAND.' > $files_mk
echo '# auto-generated by mkdepend. DO NOT EDIT BY HAND.' > $depend_mk

while [ "x$1" != "x" ] && [ "x$2" != "x" ]; do
  read_smi "$1" "$2"
  shift 2
done

print_bind () {
  tmp=`eval "echo \"\\\$$1\"" \
       | awk '{sub("^ *","");gsub("  *","\n");print}' \
       | sort | uniq`
  eval "$1=\$tmp"
  echo "$1 = $tmp" | sed '$q;s,$, \\,' >> $files_mk
}

print_bind INSTALL_FILES_SRC
print_bind INSTALL_FILES_OBJ
print_bind ALL_OBJECTS

for i in `echo "$ALL_OBJECTS" | sed "s,\.$OBJEXT\$,,"`; do
  case "$i" in
    src/ml-yacc/src/yacc.lex) ;;
    src/ml-yacc/src/yacc.grm) ;;
    src/ml-yacc2/src/yacc.lex) ;;
    src/ml-yacc2/src/yacc.grm) ;;
    *.ppg)
      GEN_SOURCES="$GEN_SOURCES $i.sml"
      echo "$i.sml: $i \$(SMLFORMAT_DEP)" >> $depend_mk
      ;;
    *.lex)
      GEN_SOURCES="$GEN_SOURCES $i.sml"
      echo "$i.sml: $i \$(MLLEX_DEP)" >> $depend_mk
      ;;
    *.grm)
      GEN_SOURCES="$GEN_SOURCES $i.sml"
      CLEAN_FILES="$CLEAN_FILES $i.sml.desc"
      echo "$i.sml: $i \$(MLYACC_DEP)" >> $depend_mk
      ;;
  esac
  echo $SMLSHARP -Bsrc -nostdpath -Isrc -M "$i.sml" 1>&2
  tmp=`$SMLSHARP -Bsrc -nostdpath -Isrc -M "$i.sml"`
  st=$?; test "$st" = "0" || exit $?
  echo "$tmp" | sed 's, *\\*$, \\,' >> $depend_mk
  echo '  $(SMLSHARP_DEP)' >> $depend_mk
done

print_bind GEN_SOURCES
print_bind CLEAN_FILES
